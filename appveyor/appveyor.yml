environment:

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.9"
      PYTHON_ARCH: "32"
      PSYCOPG2: "psycopg2-2.6.1.win32-py2.7-pg9.4.4-release.exe"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.9"
      PYTHON_ARCH: "64"
      PSYCOPG2: "psycopg2-2.6.1.win-amd64-py2.7-pg9.4.4-release.exe"

install:

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - python -m pip install -r requirements-dev.txt"
  - python --version
  - python -m pip freeze

  # Install windows version of psycopg2 from http://www.stickpeople.com/projects/python/win-psycopg/
  - ps: "Invoke-WebRequest http://www.stickpeople.com/projects/python/win-psycopg/2.6.1/$env:PSYCOPG2 -OutFile $env:PSYCOPG2"
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - easy_install %PSYCOPG2%

build: false  # Not a C# project, build stuff at the test step instead.

test_script:

  # Install the dependencies for the project
  - python -m pip install -r requirements-dev.txt"
  - python -m pip install ."
  - python -m pip freeze
  # Build the compiled extension and run the project tests
  #- nosetests

  # If tests are successful, create an installable package for the project.
  - python package4win.py bdist_msi

  # cleanup
  - python -m pip uninstall -y tuttle

  # ... And check that tuttle works
  # Ensure we know exactly the name of the installer, on every platform (amd64 and x86)
  # http://stackoverflow.com/questions/14704333/using-wildard-with-dos-copy-command-corrupts-destination-file
  - echo f | xcopy dist\tuttle-*.msi dist\tuttle-installer.msi
  - cd dist
  - msiexec /i tuttle-installer.msi /qn /norestart /log C:\projects\install_tuttle.log
  - "PATH=%PATH%;\"C:\\Program Files (x86)\\tuttle\";\"C:\\Program Files\\tuttle\""
  - cmd: more C:\projects\install_tuttle.log
  - cmd: cd C:\projects\tuttle\ci
  - cmd: tuttle -h
  - cmd: tuttle run -j 2
  - cmd: copy world-cities.csv workflow_execution_success.html
  - cmd: copy from-python workflow_execution_success2.html
  - cmd: copy from-shell-or-batch workflow_execution_success3.html

artifacts:
  # Archive the generated package in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.msi to github releases
deploy:
  description: 'Version $(appveyor_repo_tag_name)'
  provider: GitHub
  auth_token:
    secure: 7aNfc1VhEopoawEBNhOwZHswi5BZnK/XUNWeSxaGMfutQRETWAFK1D0+5aWC2oUk
  artifact: /tuttle-0.*\.msi/
  draft: true
  prerelease: true
  force_update: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only